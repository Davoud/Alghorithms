[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(D:\Coding\Algorithms\src\main\scala\dataStructures\Queue.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(D:\Coding\Algorithms\src\main\scala\dataStructures\Stack.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(dataStructures.ArrayListStack, dataStructures.Stack, dataStructures.LinkListStack, dataStructures.Node)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(dataStructures.ArrayListStack, dataStructures.Stack, dataStructures.LinkListStack, dataStructures.Node)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(D:\Coding\Algorithms\src\main\scala\dataStructures\Queue.scala, D:\Coding\Algorithms\src\main\scala\dataStructures\Stack.scala)[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 2 Scala sources to D:\Coding\Algorithms\target\scala-2.12\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.7[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.7[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler e1d7429 for Scala compiler version 2.12.7[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Program Files\Java\jre1.8.0_141\lib\resources.jar;C:\Program Files\Java\jre1.8.0_141\lib\rt.jar;C:\Program Files\Java\jre1.8.0_141\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_141\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_141\lib\jce.jar;C:\Program Files\Java\jre1.8.0_141\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_141\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_141\classes;C:\Users\Davood\.sbt\boot\scala-2.12.7\lib\scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	D:\Coding\Algorithms\target\scala-2.12\classes;D:\Coding\Algorithms\lib\algs4.jar;C:\Users\Davood\.ivy2\cache\org.typelevel\cats-core_2.12\jars\cats-core_2.12-1.4.0.jar;C:\Users\Davood\.ivy2\cache\org.typelevel\cats-macros_2.12\jars\cats-macros_2.12-1.4.0.jar;C:\Users\Davood\.ivy2\cache\org.typelevel\machinist_2.12\jars\machinist_2.12-0.6.5.jar;C:\Users\Davood\.sbt\boot\scala-2.12.7\lib\scala-reflect.jar;C:\Users\Davood\.ivy2\cache\org.typelevel\cats-kernel_2.12\jars\cats-kernel_2.12-1.4.0.jar;C:\Users\Davood\.ivy2\cache\org.scalactic\scalactic_2.12\bundles\scalactic_2.12-3.0.5.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 6.747479457 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from dataStructures.LinkedListQueue.Node...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(dataStructures.LinkedListQueue.Node)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(dataStructures.LinkedListQueue.Node)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(dataStructures.LinkedListQueue.Node,ModifiedNames(changes = UsedName($init$,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(copy,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(Node,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]), UsedName(notify,[Default]), UsedName(dataStructures;LinkedListQueue;Node;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(copy$default$2,[Default]), UsedName(getClass,[Default]), UsedName(unapply,[Default]), UsedName(ne,[Default]), UsedName(value,[Default]), UsedName(next,[Default]), UsedName(canEqual,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]))) invalidates 1 classes due to The dataStructures.LinkedListQueue.Node has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($init$,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(copy,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(Node,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]), UsedName(notify,[Default]), UsedName(dataStructures;LinkedListQueue;Node;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(copy$default$2,[Default]), UsedName(getClass,[Default]), UsedName(unapply,[Default]), UsedName(ne,[Default]), UsedName(value,[Default]), UsedName(next,[Default]), UsedName(canEqual,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(dataStructures.LinkedListQueue.Node)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from dataStructures.Queue...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(dataStructures.Queue)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding dataStructures.LinkedListQueue by dataStructures.Queue[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(dataStructures.Queue, dataStructures.LinkedListQueue)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(dataStructures.Queue,ModifiedNames(changes = UsedName($asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(isEmpty,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(dequeue,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(Queue,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(enqueue,[Default]))) invalidates 2 classes due to The dataStructures.Queue has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(isEmpty,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(dequeue,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(Queue,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(ne,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(enqueue,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(dataStructures.Queue, dataStructures.LinkedListQueue)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from dataStructures.LinkedListQueue...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(dataStructures.LinkedListQueue)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(dataStructures.LinkedListQueue)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(dataStructures.LinkedListQueue,ModifiedNames(changes = UsedName($asInstanceOf,[Default]), UsedName(dataStructures;LinkedListQueue;init;,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(isEmpty,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(dequeue,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(ne,[Default]), UsedName(LinkedListQueue,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(enqueue,[Default]))) invalidates 1 classes due to The dataStructures.LinkedListQueue has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($asInstanceOf,[Default]), UsedName(dataStructures;LinkedListQueue;init;,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(isEmpty,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(dequeue,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(ne,[Default]), UsedName(LinkedListQueue,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(hashCode,[Default]), UsedName(enqueue,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(dataStructures.LinkedListQueue)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
